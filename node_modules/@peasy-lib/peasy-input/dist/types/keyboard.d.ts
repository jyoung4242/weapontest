import { KeyboardMapping } from "./keyboard-mapping";
export declare type KeyCallback = (key: string, pressed: boolean, deltaTime: number) => void;
export declare type KeymapMode = 'add' | 'replace';
export declare type KeyEffectMode = 'instant' | 'interval';
export interface IKeyMapping {
    action: string;
    repeat: boolean;
    mapping?: KeyboardMapping;
}
export declare class Keyboard {
    private static element;
    private static mappings;
    private static readonly pressed;
    private static lastPressed;
    static initialize(element: HTMLElement): typeof Keyboard;
    static terminate(): void;
    static map(mappings: string | string[] | Record<string, IKeyMapping>, callback?: KeyCallback, effectMode?: KeyEffectMode, keymapMode?: KeymapMode): KeyboardMapping;
    static unmap(mapping: KeyboardMapping): void;
    static keyChange: (event: KeyboardEvent) => void;
    static resolve(keys: string, eventType: string): void;
    static update(deltaTime: number): void;
    static mapped(keys: string): IKeyMapping | undefined;
    static is(action: string): boolean;
}
//# sourceMappingURL=keyboard.d.ts.map