export declare type EngineCallback = (deltaTime: number, runtime: number) => void | Promise<void>;
export interface IEngine {
    callback: EngineCallback;
    started?: boolean;
    fps?: number;
    ms?: number;
    resetThreshold?: number;
    oneTime?: boolean;
    isolated?: boolean;
}
export declare class Engine {
    private readonly interval;
    private readonly callback;
    static engines: Engine[];
    startTime?: number;
    private started;
    private paused;
    private destroyed;
    private lastTime;
    private resetThreshold;
    private timeSinceLast;
    private accTime;
    private oneTime;
    private isolated;
    private constructor();
    static create(options: IEngine | EngineCallback): Engine;
    static start(): boolean[];
    static stop(): boolean[];
    static pause(): boolean[];
    static destroy(): void;
    start(): boolean;
    stop(): boolean;
    pause(): boolean;
    destroy(): void;
    private readonly doStart;
    private readonly tick;
    private readonly call;
}
//# sourceMappingURL=engine.d.ts.map