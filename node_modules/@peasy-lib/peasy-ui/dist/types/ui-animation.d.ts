import { UIView } from './ui-view';
export interface UIKeyframeEffectOptions extends KeyframeEffectOptions {
    blocking?: 'none' | 'block' | 'chain';
    blockDuration?: number;
}
export declare type IUIAnimation = Partial<Omit<UIAnimation, 'play' | 'clone' | 'animation'>>;
export declare class UIAnimation {
    name: string;
    view: UIView | null;
    element: HTMLElement | null;
    keyframes: Keyframe[] | PropertyIndexedKeyframes | null;
    options: UIKeyframeEffectOptions | null;
    blocking: 'none' | 'block' | 'chain';
    blockDuration: number;
    chain: UIAnimation | null;
    state: 'idle' | 'pending' | 'playing' | 'finished';
    startTime: number;
    finished: Promise<Animation> | null;
    animation: Animation | null;
    static create(options: IUIAnimation): UIAnimation;
    destroy(): void;
    isBlocking(now: number): boolean;
    isBlocked(now: number): boolean;
    play(element?: HTMLElement): UIAnimation;
    clone(): UIAnimation;
}
//# sourceMappingURL=ui-animation.d.ts.map